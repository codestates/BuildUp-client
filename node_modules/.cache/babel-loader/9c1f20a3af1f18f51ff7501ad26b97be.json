{"ast":null,"code":"var _jsxFileName = \"/home/studio/Desktop/Team_Project/BuildUp-client/src/components/modals/TodoManagerListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../css/temporary-CSS-todoManager.css\";\nimport { deleteTodoList, updateTodoList, setAccessToken } from \"../../actions/index\";\nimport { fetch_custom, jwt_isExpired } from \"../../utilities/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst _initGrabData = {\n  target: null,\n  position: null,\n  move_up: [],\n  move_down: [],\n  updateList: []\n};\n\nconst TodoManagerListContainer = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [lists, setLists] = useState([]);\n  const [grab, setGrab] = useState(_initGrabData);\n  const [isDrag, setIsDrag] = useState(false);\n  const [editKey, setEditKey] = useState(null);\n  const [editText, setEditText] = useState(\"\");\n  const dateSelectorState = useSelector(state => state.dateSelectorReducer);\n  const todoItemsState = useSelector(state => state.toDoItemsReducer);\n  const accessTokenState = useSelector(state => state.accessTokenReducer);\n  const {\n    dateSelector\n  } = dateSelectorState;\n  const todoItems = todoItemsState.todoItems;\n  const accessToken = accessTokenState.accessToken;\n  useEffect(() => {\n    const year = `${dateSelector.year}`.padStart(4, \"0\");\n    const month = `${dateSelector.month}`.padStart(2, \"0\");\n    const day = `${dateSelector.day}`.padStart(2, \"0\");\n    const curPos = `${year}-${month}-${day}`;\n    let max = 0;\n    const sorted = todoItems.filter(el => {\n      if (el.date === curPos) {\n        if (max < el.order) max = el.order;\n        return true;\n      }\n\n      return false;\n    });\n    sorted.sort((a, b) => a.order - b.order);\n    setLists(sorted);\n    props.handleMaxOrder(max);\n  }, [todoItems, dateSelector, props]);\n\n  const handleDragOver = e => {\n    if (e.target.value === \"checkbox\") return;\n    e.preventDefault();\n  };\n\n  const handleDragStart = e => {\n    if (e.target.value === \"checkbox\") return; // ! HTML Element의 커스텀 속성은 e.target.{props}로 얻을 수 없다.\n    // ! getAttribute 사용해야함. dataset은 그럴 필요가 없다. 이걸 쓰도록...\n\n    setIsDrag(true);\n    setGrab({ ...grab,\n      target: e.target,\n      position: Number(e.target.dataset.order),\n      updateList: [...lists]\n    });\n    e.target.classList.add(\"grabbing\");\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"text/html\", e.target);\n  };\n\n  const handleDragEnd = e => {\n    if (e.target.value === \"checkbox\") return;\n    setIsDrag(false);\n    e.target.classList.remove(\"grabbing\");\n    e.dataTransfer.dropEffect = \"move\";\n    setLists([...grab.updateList]);\n    handleUpdateListOrder(grab.updateList);\n    setGrab({\n      target: null,\n      move_up: [],\n      move_down: [],\n      updateList: []\n    });\n    e.target.style.visibility = \"visible\";\n  };\n\n  const handleDragEnter = e => {\n    if (e.target.className.includes(\"notTarget\")) return;\n    if (e.target.value === \"checkbox\") return;\n    if (!isDrag) return;\n    let grabPosition = Number(grab.target.dataset.order);\n    let listPosition = grab.position;\n    let targetPosition = Number(e.target.dataset.order);\n    let move_up = [...grab.move_up];\n    let move_down = [...grab.move_down];\n    let data = [...grab.updateList];\n    data[listPosition] = data.splice(targetPosition, 1, data[listPosition])[0];\n\n    if (grabPosition > targetPosition) {\n      move_down.includes(targetPosition) ? move_down.pop() : move_down.push(targetPosition);\n    } else if (grabPosition < targetPosition) {\n      move_up.includes(targetPosition) ? move_up.pop() : move_up.push(targetPosition);\n    } else {\n      move_down = [];\n      move_up = [];\n    }\n\n    setGrab({ ...grab,\n      move_up,\n      move_down,\n      updateList: data,\n      position: targetPosition\n    });\n  };\n\n  const handleDragLeave = e => {\n    if (e.target.className.includes(\"notTarget\")) return;\n    if (e.target.value === \"checkbox\") return;\n    if (!isDrag) return;\n\n    if (e.target === grab.target) {\n      e.target.style.visibility = \"hidden\";\n    }\n  };\n\n  const handleUpdateListOrder = async lists => {\n    if (lists.length <= 0 && lists) return;\n\n    for (let idx = 0; idx < lists.length; idx++) {\n      const storeIdx = todoItems.indexOf(lists[idx]);\n      const item = todoItems[storeIdx];\n      const {\n        id,\n        content,\n        checked,\n        order\n      } = item;\n      if (order === idx) continue; // if (jwt_isExpired(accessToken)) {\n      //   console.log(\"토큰 재발급을 시작합니다.....!\");\n      //   let token = await fetch_custom.getAccessToken(accessToken);\n      //   await dispatch(setAccessToken(token));\n      // }\n\n      dispatch(updateTodoList({\n        id,\n        content,\n        checked,\n        order: idx\n      }));\n      fetch_custom.updateTodo(accessToken, {\n        id,\n        content,\n        isChecked: checked,\n        order: idx\n      });\n    }\n  };\n\n  const handleUpdateTextarea = e => {\n    setEditText(e.target.value);\n  };\n\n  const handleDeleteTodo = async PK => {\n    // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n    dispatch(deleteTodoList({\n      id: PK\n    }));\n    fetch_custom.removeTodo(accessToken, {\n      id: PK\n    }); // TODO: LIST에도 체크 여부를 전달해야 한다.\n\n    const year = `${dateSelector.year}`.padStart(4, \"0\");\n    const month = `${dateSelector.month}`.padStart(2, \"0\");\n    const day = `${dateSelector.day}`.padStart(2, \"0\");\n    const curPos = `${year}-${month}-${day}`;\n    const sorted = todoItems.filter(el => {\n      if (el.date === curPos) {\n        return true;\n      }\n\n      return false;\n    });\n    setLists(sorted);\n  };\n\n  const handleCheckboxEvent = async PK => {\n    let index;\n\n    for (let i = 0; i < todoItems.length; i++) {\n      const item = todoItems[i];\n\n      if (item.id === PK) {\n        index = i;\n        break;\n      }\n    }\n\n    const item = todoItems[index];\n    let {\n      id,\n      content,\n      checked,\n      order\n    } = item;\n    checked === true ? checked = false : checked = true; // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n\n    dispatch(updateTodoList({\n      id,\n      content,\n      order,\n      checked\n    }));\n    fetch_custom.updateTodo(accessToken, {\n      id,\n      content,\n      order,\n      isChecked: checked\n    }); // TODO: LIST에도 체크 여부를 전달해야 한다.\n\n    const year = `${dateSelector.year}`.padStart(4, \"0\");\n    const month = `${dateSelector.month}`.padStart(2, \"0\");\n    const day = `${dateSelector.day}`.padStart(2, \"0\");\n    const curPos = `${year}-${month}-${day}`;\n    const sorted = todoItems.filter(el => {\n      if (el.date === curPos) {\n        return true;\n      }\n\n      return false;\n    });\n    setLists(sorted);\n  };\n\n  const handleEditText = key => {\n    setEditKey(key);\n  };\n\n  const handleEditTextConfirm = async PK => {\n    if (editText.length === 0) return;\n    let index;\n\n    for (let i = 0; i < todoItems.length; i++) {\n      const item = todoItems[i];\n\n      if (item.id === PK) {\n        index = i;\n        break;\n      }\n    }\n\n    const item = todoItems[index];\n    let {\n      id,\n      checked,\n      order\n    } = item; // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n\n    dispatch(updateTodoList({\n      id,\n      content: editText,\n      order,\n      checked\n    }));\n    fetch_custom.updateTodo(accessToken, {\n      id,\n      content: editText,\n      order,\n      isChecked: checked\n    }); // TODO: LIST에도 체크 여부를 전달해야 한다.\n\n    const year = `${dateSelector.year}`.padStart(4, \"0\");\n    const month = `${dateSelector.month}`.padStart(2, \"0\");\n    const day = `${dateSelector.day}`.padStart(2, \"0\");\n    const curPos = `${year}-${month}-${day}`;\n    const sorted = todoItems.filter(el => {\n      if (el.date === curPos) {\n        return true;\n      }\n\n      return false;\n    });\n    setLists(sorted);\n    setEditText(\"\");\n    handleExitEditText();\n  };\n\n  const handleExitEditText = () => {\n    setEditKey(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    id: \"todo-manager-container\",\n    onDragOver: handleDragOver,\n    children: lists.map((val, index) => {\n      let classNames = \"\";\n      grab.move_up.includes(index) && (classNames = \"move_up\");\n      grab.move_down.includes(index) && (classNames = \"move_down\");\n      let move_stop = isDrag ? \"\" : \"move_stop\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-key\": val.id,\n        \"data-order\": index,\n        \"data-content\": val.content,\n        \"data-date\": val.date,\n        className: [\"todo-manager-item\", classNames, move_stop, \"cursor-move\"].join(\" \"),\n        isdrag: isDrag ? 1 : 0 //! onDragStart: Element를 드래그하기 시작할 때\n        ,\n        onDragStart: handleDragStart // ! onDragEnd: Element의 드래그를 끝낼 때\n        ,\n        onDragEnd: handleDragEnd // ! onDragEnter: Draggable Element가 자신의 (event.target은 자신)범위 안으로 들어갔을 때\n        ,\n        onDragEnter: handleDragEnter // ! onDragLeave: Draggable Element가 자신의 (event.target은 자신)범위 밖으로 나갔을 때\n        ,\n        onDragLeave: handleDragLeave,\n        draggable: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: [\"button-container\", \"notTarget\"].join(\" \"),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: \"checkbox\",\n            onClick: () => {\n              handleCheckboxEvent(val.id);\n            },\n            defaultChecked: val.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"notTarget\",\n            onClick: () => {\n              handleEditText(val.id);\n            },\n            children: \"\\uD3B8\\uC9D1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"notTarget\",\n            onClick: () => {\n              handleDeleteTodo(val.id);\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: [\"text-container\", \"notTarget\"].join(\" \"),\n          children: editKey === val.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notTarget\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              maxLength: \"100\",\n              className: \"notTarget\",\n              onChange: handleUpdateTextarea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"notTarget\",\n              onClick: () => {\n                handleEditTextConfirm(val.id);\n              },\n              children: \"\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"notTarget\",\n              onClick: handleExitEditText,\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: val.content\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, val.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoManagerListContainer, \"np2CDHANKktaxU/bIKOMDwtjqCY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = TodoManagerListContainer;\nexport default TodoManagerListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoManagerListContainer\");","map":{"version":3,"sources":["/home/studio/Desktop/Team_Project/BuildUp-client/src/components/modals/TodoManagerListContainer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","deleteTodoList","updateTodoList","setAccessToken","fetch_custom","jwt_isExpired","_initGrabData","target","position","move_up","move_down","updateList","TodoManagerListContainer","props","dispatch","lists","setLists","grab","setGrab","isDrag","setIsDrag","editKey","setEditKey","editText","setEditText","dateSelectorState","state","dateSelectorReducer","todoItemsState","toDoItemsReducer","accessTokenState","accessTokenReducer","dateSelector","todoItems","accessToken","year","padStart","month","day","curPos","max","sorted","filter","el","date","order","sort","a","b","handleMaxOrder","handleDragOver","e","value","preventDefault","handleDragStart","Number","dataset","classList","add","dataTransfer","effectAllowed","setData","handleDragEnd","remove","dropEffect","handleUpdateListOrder","style","visibility","handleDragEnter","className","includes","grabPosition","listPosition","targetPosition","data","splice","pop","push","handleDragLeave","length","idx","storeIdx","indexOf","item","id","content","checked","updateTodo","isChecked","handleUpdateTextarea","handleDeleteTodo","PK","removeTodo","handleCheckboxEvent","index","i","handleEditText","key","handleEditTextConfirm","handleExitEditText","map","val","classNames","move_stop","join"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../css/temporary-CSS-todoManager.css\";\nimport {\n  deleteTodoList,\n  updateTodoList,\n  setAccessToken,\n} from \"../../actions/index\";\nimport { fetch_custom, jwt_isExpired } from \"../../utilities/index\";\n\nconst _initGrabData = {\n  target: null,\n  position: null,\n  move_up: [],\n  move_down: [],\n  updateList: [],\n};\n\nconst TodoManagerListContainer = (props) => {\n  const dispatch = useDispatch();\n  const [lists, setLists] = useState([]);\n  const [grab, setGrab] = useState(_initGrabData);\n  const [isDrag, setIsDrag] = useState(false);\n  const [editKey, setEditKey] = useState(null);\n  const [editText, setEditText] = useState(\"\");\n\n  const dateSelectorState = useSelector((state) => state.dateSelectorReducer);\n  const todoItemsState = useSelector((state) => state.toDoItemsReducer);\n  const accessTokenState = useSelector((state) => state.accessTokenReducer);\n  const { dateSelector } = dateSelectorState;\n  const todoItems = todoItemsState.todoItems;\n  const accessToken = accessTokenState.accessToken;\n\n  useEffect(() => {\n    const year = `${dateSelector.year}`.padStart(4, \"0\");\n    const month = `${dateSelector.month}`.padStart(2, \"0\");\n    const day = `${dateSelector.day}`.padStart(2, \"0\");\n\n    const curPos = `${year}-${month}-${day}`;\n\n    let max = 0;\n    const sorted = todoItems.filter((el) => {\n      if (el.date === curPos) {\n        if (max < el.order) max = el.order;\n        return true;\n      }\n      return false;\n    });\n\n    sorted.sort((a, b) => a.order - b.order);\n\n    setLists(sorted);\n    props.handleMaxOrder(max);\n  }, [todoItems, dateSelector, props]);\n\n  const handleDragOver = (e) => {\n    if (e.target.value === \"checkbox\") return;\n    e.preventDefault();\n  };\n\n  const handleDragStart = (e) => {\n    if (e.target.value === \"checkbox\") return;\n    // ! HTML Element의 커스텀 속성은 e.target.{props}로 얻을 수 없다.\n    // ! getAttribute 사용해야함. dataset은 그럴 필요가 없다. 이걸 쓰도록...\n    setIsDrag(true);\n    setGrab({\n      ...grab,\n      target: e.target,\n      position: Number(e.target.dataset.order),\n      updateList: [...lists],\n    });\n\n    e.target.classList.add(\"grabbing\");\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"text/html\", e.target);\n  };\n\n  const handleDragEnd = (e) => {\n    if (e.target.value === \"checkbox\") return;\n    setIsDrag(false);\n    e.target.classList.remove(\"grabbing\");\n    e.dataTransfer.dropEffect = \"move\";\n\n    setLists([...grab.updateList]);\n    handleUpdateListOrder(grab.updateList);\n\n    setGrab({\n      target: null,\n      move_up: [],\n      move_down: [],\n      updateList: [],\n    });\n\n    e.target.style.visibility = \"visible\";\n  };\n\n  const handleDragEnter = (e) => {\n    if (e.target.className.includes(\"notTarget\")) return;\n    if (e.target.value === \"checkbox\") return;\n    if (!isDrag) return;\n    let grabPosition = Number(grab.target.dataset.order);\n    let listPosition = grab.position;\n    let targetPosition = Number(e.target.dataset.order);\n\n    let move_up = [...grab.move_up];\n    let move_down = [...grab.move_down];\n\n    let data = [...grab.updateList];\n    data[listPosition] = data.splice(targetPosition, 1, data[listPosition])[0];\n\n    if (grabPosition > targetPosition) {\n      move_down.includes(targetPosition)\n        ? move_down.pop()\n        : move_down.push(targetPosition);\n    } else if (grabPosition < targetPosition) {\n      move_up.includes(targetPosition)\n        ? move_up.pop()\n        : move_up.push(targetPosition);\n    } else {\n      move_down = [];\n      move_up = [];\n    }\n\n    setGrab({\n      ...grab,\n      move_up,\n      move_down,\n      updateList: data,\n      position: targetPosition,\n    });\n  };\n\n  const handleDragLeave = (e) => {\n    if (e.target.className.includes(\"notTarget\")) return;\n    if (e.target.value === \"checkbox\") return;\n    if (!isDrag) return;\n    if (e.target === grab.target) {\n      e.target.style.visibility = \"hidden\";\n    }\n  };\n\n  const handleUpdateListOrder = async (lists) => {\n    if (lists.length <= 0 && lists) return;\n\n    for (let idx = 0; idx < lists.length; idx++) {\n      const storeIdx = todoItems.indexOf(lists[idx]);\n      const item = todoItems[storeIdx];\n      const { id, content, checked, order } = item;\n      if (order === idx) continue;\n\n      // if (jwt_isExpired(accessToken)) {\n      //   console.log(\"토큰 재발급을 시작합니다.....!\");\n      //   let token = await fetch_custom.getAccessToken(accessToken);\n      //   await dispatch(setAccessToken(token));\n      // }\n\n      dispatch(updateTodoList({ id, content, checked, order: idx }));\n      fetch_custom.updateTodo(accessToken, {\n        id,\n        content,\n        isChecked: checked,\n        order: idx,\n      });\n    }\n  };\n\n  const handleUpdateTextarea = (e) => {\n    setEditText(e.target.value);\n  };\n\n  const handleDeleteTodo = async (PK) => {\n    // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n\n    dispatch(deleteTodoList({ id: PK }));\n    fetch_custom.removeTodo(accessToken, { id: PK });\n\n    // TODO: LIST에도 체크 여부를 전달해야 한다.\n    const year = `${dateSelector.year}`.padStart(4, \"0\");\n    const month = `${dateSelector.month}`.padStart(2, \"0\");\n    const day = `${dateSelector.day}`.padStart(2, \"0\");\n\n    const curPos = `${year}-${month}-${day}`;\n\n    const sorted = todoItems.filter((el) => {\n      if (el.date === curPos) {\n        return true;\n      }\n      return false;\n    });\n\n    setLists(sorted);\n  };\n\n  const handleCheckboxEvent = async (PK) => {\n    let index;\n\n    for (let i = 0; i < todoItems.length; i++) {\n      const item = todoItems[i];\n      if (item.id === PK) {\n        index = i;\n        break;\n      }\n    }\n\n    const item = todoItems[index];\n    let { id, content, checked, order } = item;\n    checked === true ? (checked = false) : (checked = true);\n\n    // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n\n    dispatch(updateTodoList({ id, content, order, checked }));\n    fetch_custom.updateTodo(accessToken, {\n      id,\n      content,\n      order,\n      isChecked: checked,\n    });\n\n    // TODO: LIST에도 체크 여부를 전달해야 한다.\n    const year = `${dateSelector.year}`.padStart(4, \"0\");\n    const month = `${dateSelector.month}`.padStart(2, \"0\");\n    const day = `${dateSelector.day}`.padStart(2, \"0\");\n\n    const curPos = `${year}-${month}-${day}`;\n\n    const sorted = todoItems.filter((el) => {\n      if (el.date === curPos) {\n        return true;\n      }\n      return false;\n    });\n\n    setLists(sorted);\n  };\n\n  const handleEditText = (key) => {\n    setEditKey(key);\n  };\n\n  const handleEditTextConfirm = async (PK) => {\n    if (editText.length === 0) return;\n    let index;\n\n    for (let i = 0; i < todoItems.length; i++) {\n      const item = todoItems[i];\n      if (item.id === PK) {\n        index = i;\n        break;\n      }\n    }\n\n    const item = todoItems[index];\n    let { id, checked, order } = item;\n\n    // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n\n    dispatch(updateTodoList({ id, content: editText, order, checked }));\n    fetch_custom.updateTodo(accessToken, {\n      id,\n      content: editText,\n      order,\n      isChecked: checked,\n    });\n\n    // TODO: LIST에도 체크 여부를 전달해야 한다.\n    const year = `${dateSelector.year}`.padStart(4, \"0\");\n    const month = `${dateSelector.month}`.padStart(2, \"0\");\n    const day = `${dateSelector.day}`.padStart(2, \"0\");\n\n    const curPos = `${year}-${month}-${day}`;\n\n    const sorted = todoItems.filter((el) => {\n      if (el.date === curPos) {\n        return true;\n      }\n      return false;\n    });\n\n    setLists(sorted);\n    setEditText(\"\");\n    handleExitEditText();\n  };\n\n  const handleExitEditText = () => {\n    setEditKey(null);\n  };\n\n  return (\n    <ul id=\"todo-manager-container\" onDragOver={handleDragOver}>\n      {lists.map((val, index) => {\n        let classNames = \"\";\n\n        grab.move_up.includes(index) && (classNames = \"move_up\");\n        grab.move_down.includes(index) && (classNames = \"move_down\");\n\n        let move_stop = isDrag ? \"\" : \"move_stop\";\n\n        return (\n          <div\n            key={val.id}\n            data-key={val.id}\n            data-order={index}\n            data-content={val.content}\n            data-date={val.date}\n            className={[\n              \"todo-manager-item\",\n              classNames,\n              move_stop,\n              \"cursor-move\",\n            ].join(\" \")}\n            isdrag={isDrag ? 1 : 0}\n            //! onDragStart: Element를 드래그하기 시작할 때\n            onDragStart={handleDragStart}\n            // ! onDragEnd: Element의 드래그를 끝낼 때\n            onDragEnd={handleDragEnd}\n            // ! onDragEnter: Draggable Element가 자신의 (event.target은 자신)범위 안으로 들어갔을 때\n            onDragEnter={handleDragEnter}\n            // ! onDragLeave: Draggable Element가 자신의 (event.target은 자신)범위 밖으로 나갔을 때\n            onDragLeave={handleDragLeave}\n            draggable\n          >\n            <div className={[\"button-container\", \"notTarget\"].join(\" \")}>\n              <input\n                type=\"checkbox\"\n                value=\"checkbox\"\n                onClick={() => {\n                  handleCheckboxEvent(val.id);\n                }}\n                defaultChecked={val.checked}\n              />\n              <button\n                className=\"notTarget\"\n                onClick={() => {\n                  handleEditText(val.id);\n                }}\n              >\n                편집\n              </button>\n              <button\n                className=\"notTarget\"\n                onClick={() => {\n                  handleDeleteTodo(val.id);\n                }}\n              >\n                삭제\n              </button>\n            </div>\n            <div className={[\"text-container\", \"notTarget\"].join(\" \")}>\n              {editKey === val.id ? (\n                <span className=\"notTarget\">\n                  <textarea\n                    maxLength=\"100\"\n                    className=\"notTarget\"\n                    onChange={handleUpdateTextarea}\n                  ></textarea>\n                  <button\n                    className=\"notTarget\"\n                    onClick={() => {\n                      handleEditTextConfirm(val.id);\n                    }}\n                  >\n                    확인\n                  </button>\n                  <button className=\"notTarget\" onClick={handleExitEditText}>\n                    취소\n                  </button>\n                </span>\n              ) : (\n                <>{val.content}</>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TodoManagerListContainer;\n"]},"metadata":{},"sourceType":"module"}