{"ast":null,"code":"var _jsxFileName = \"/home/studio/Desktop/Team_Project/BuildUp-client/src/components/carousels/DayPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../css/temporary-CSS-for-Carousel.css\";\nimport DayTodoItemList from \"./DayTodoContainer\";\nimport { js_date, jwt_isExpired, fetch_custom } from \"../../utilities/index.js\";\nimport { createTodoList, setAccessToken } from \"../../actions/index\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DayPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [time, setTime] = useState(new Date());\n  const [maxOrder, setMaxOrder] = useState(0);\n  const [isTextareaActive, setTextareaActive] = useState(false);\n  const [word, setWord] = useState(\"\");\n  const accessTokenState = useSelector(state => state.accessTokenReducer);\n  const accessToken = accessTokenState.accessToken;\n\n  const handleToggleTextarea = () => {\n    setTextareaActive(!isTextareaActive);\n  };\n\n  const handleAddTodo = async () => {\n    let date = format(time, \"yyyy-MM-dd\").split(\"-\");\n    const year = date[0].padStart(4, \"0\");\n    const month = date[1].padStart(2, \"0\");\n    const day = date[2].padStart(2, \"0\");\n    date = `${year}-${month}-${day}`; // TODO: 1. 토큰이 만료되었는지 확인한다\n    // TODO: 2. 토큰이 만료되었으면 새로운 토큰을 요청한다.\n    // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n    // TODO 3. 새로 생성할 TODO를 서버에 전송하여 Primary Key를 받는다.\n\n    const data = {\n      order: maxOrder + 1,\n      content: word,\n      now: date\n    };\n    const PK = await fetch_custom.createTodo(accessToken, data); // TODO 4. 클라이언트 측에도 업데이트 사항을 REDUX STORE에 반영한다.\n\n    await dispatch(createTodoList({\n      order: maxOrder + 1,\n      content: word,\n      date,\n      id: PK\n    }));\n    setMaxOrder(maxOrder + 1);\n    handleToggleTextarea();\n    const el = document.getElementsByClassName(\"day-todo-container-ul\")[0];\n    el.scrollTo(0, el.scrollHeight);\n  };\n\n  const handleUpdateText = e => {\n    setWord(e.target.value);\n  };\n\n  const handleMaxOrder = number => {\n    setMaxOrder(number);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"day-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"day-main\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"day-title\",\n        children: [js_date.getMonth(time), \". \", js_date.getDay(time), \".\", \" \", js_date.getLabel(time).toLowerCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"day-todo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"day-button-container\",\n        children: isTextareaActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"day-textarea\",\n            maxLength: \"100\",\n            onChange: handleUpdateText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"day-btn-confirm-cancel\",\n            onClick: handleAddTodo,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"day-btn-confirm-cancel\",\n            onClick: handleToggleTextarea,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"day-btn-add-todo\",\n          onClick: handleToggleTextarea,\n          children: \"\\uC0C8\\uB85C\\uC6B4 TODO \\uC791\\uC131\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DayTodoItemList, {\n        pos: time,\n        handleMaxOrder: handleMaxOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DayPage, \"kxEUevZpxaTuCGFRf+jg0R173W8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DayPage;\nexport default DayPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayPage\");","map":{"version":3,"sources":["/home/studio/Desktop/Team_Project/BuildUp-client/src/components/carousels/DayPage.js"],"names":["React","useState","useDispatch","useSelector","DayTodoItemList","js_date","jwt_isExpired","fetch_custom","createTodoList","setAccessToken","format","DayPage","dispatch","time","setTime","Date","maxOrder","setMaxOrder","isTextareaActive","setTextareaActive","word","setWord","accessTokenState","state","accessTokenReducer","accessToken","handleToggleTextarea","handleAddTodo","date","split","year","padStart","month","day","data","order","content","now","PK","createTodo","id","el","document","getElementsByClassName","scrollTo","scrollHeight","handleUpdateText","e","target","value","handleMaxOrder","number","getMonth","getDay","getLabel","toLowerCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,uCAAP;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,YAAjC,QAAqD,0BAArD;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,qBAA/C;AACA,SAASC,MAAT,QAAuB,UAAvB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAIc,IAAJ,EAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACiB,gBAAD,EAAmBC,iBAAnB,IAAwClB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMqB,gBAAgB,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,kBAAlB,CAApC;AACA,QAAMC,WAAW,GAAGH,gBAAgB,CAACG,WAArC;;AAEA,QAAMC,oBAAoB,GAAG,MAAM;AACjCP,IAAAA,iBAAiB,CAAC,CAACD,gBAAF,CAAjB;AACD,GAFD;;AAIA,QAAMS,aAAa,GAAG,YAAY;AAChC,QAAIC,IAAI,GAAGlB,MAAM,CAACG,IAAD,EAAO,YAAP,CAAN,CAA2BgB,KAA3B,CAAiC,GAAjC,CAAX;AACA,UAAMC,IAAI,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAR,CAAiB,CAAjB,EAAoB,GAApB,CAAb;AACA,UAAMC,KAAK,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAR,CAAiB,CAAjB,EAAoB,GAApB,CAAd;AACA,UAAME,GAAG,GAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAR,CAAiB,CAAjB,EAAoB,GAApB,CAAZ;AAEAH,IAAAA,IAAI,GAAI,GAAEE,IAAK,IAAGE,KAAM,IAAGC,GAAI,EAA/B,CANgC,CAQhC;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,UAAMC,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAAEnB,QAAQ,GAAG,CAApB;AAAuBoB,MAAAA,OAAO,EAAEhB,IAAhC;AAAsCiB,MAAAA,GAAG,EAAET;AAA3C,KAAb;AACA,UAAMU,EAAE,GAAG,MAAM/B,YAAY,CAACgC,UAAb,CAAwBd,WAAxB,EAAqCS,IAArC,CAAjB,CAjBgC,CAkBhC;;AAEA,UAAMtB,QAAQ,CACZJ,cAAc,CAAC;AAAE2B,MAAAA,KAAK,EAAEnB,QAAQ,GAAG,CAApB;AAAuBoB,MAAAA,OAAO,EAAEhB,IAAhC;AAAsCQ,MAAAA,IAAtC;AAA4CY,MAAAA,EAAE,EAAEF;AAAhD,KAAD,CADF,CAAd;AAGArB,IAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACAU,IAAAA,oBAAoB;AAEpB,UAAMe,EAAE,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,uBAAhC,EAAyD,CAAzD,CAAX;AACAF,IAAAA,EAAE,CAACG,QAAH,CAAY,CAAZ,EAAeH,EAAE,CAACI,YAAlB;AACD,GA5BD;;AA8BA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B1B,IAAAA,OAAO,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,MAAD,IAAY;AACjClC,IAAAA,WAAW,CAACkC,MAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA,4BACE;AAAQ,MAAA,EAAE,EAAC,UAAX;AAAA,6BACE;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA,mBACG9C,OAAO,CAAC+C,QAAR,CAAiBvC,IAAjB,CADH,QAC6BR,OAAO,CAACgD,MAAR,CAAexC,IAAf,CAD7B,OACoD,GADpD,EAEGR,OAAO,CAACiD,QAAR,CAAiBzC,IAAjB,EAAuB0C,WAAvB,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAS,MAAA,EAAE,EAAC,oBAAZ;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,sBAAR;AAAA,kBACGrC,gBAAgB,gBACf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,SAAS,EAAC,KAFZ;AAGE,YAAA,QAAQ,EAAE4B;AAHZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AACE,YAAA,SAAS,EAAC,wBADZ;AAEE,YAAA,OAAO,EAAEnB,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAYE;AACE,YAAA,SAAS,EAAC,wBADZ;AAEE,YAAA,OAAO,EAAED,oBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA,wBADe,gBAqBf;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,OAAO,EAAEA,oBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,cADF,eA4BE,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAEb,IAAtB;AAA4B,QAAA,cAAc,EAAEqC;AAA5C;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GA7FQvC,O;UACUT,W,EAOQC,W;;;KARlBQ,O;AA+FT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../css/temporary-CSS-for-Carousel.css\";\nimport DayTodoItemList from \"./DayTodoContainer\";\nimport { js_date, jwt_isExpired, fetch_custom } from \"../../utilities/index.js\";\nimport { createTodoList, setAccessToken } from \"../../actions/index\";\nimport { format } from \"date-fns\";\n\nfunction DayPage() {\n  const dispatch = useDispatch();\n\n  const [time, setTime] = useState(new Date());\n  const [maxOrder, setMaxOrder] = useState(0);\n  const [isTextareaActive, setTextareaActive] = useState(false);\n  const [word, setWord] = useState(\"\");\n\n  const accessTokenState = useSelector((state) => state.accessTokenReducer);\n  const accessToken = accessTokenState.accessToken;\n\n  const handleToggleTextarea = () => {\n    setTextareaActive(!isTextareaActive);\n  };\n\n  const handleAddTodo = async () => {\n    let date = format(time, \"yyyy-MM-dd\").split(\"-\");\n    const year = date[0].padStart(4, \"0\");\n    const month = date[1].padStart(2, \"0\");\n    const day = date[2].padStart(2, \"0\");\n\n    date = `${year}-${month}-${day}`;\n\n    // TODO: 1. 토큰이 만료되었는지 확인한다\n    // TODO: 2. 토큰이 만료되었으면 새로운 토큰을 요청한다.\n    // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n\n    // TODO 3. 새로 생성할 TODO를 서버에 전송하여 Primary Key를 받는다.\n    const data = { order: maxOrder + 1, content: word, now: date };\n    const PK = await fetch_custom.createTodo(accessToken, data);\n    // TODO 4. 클라이언트 측에도 업데이트 사항을 REDUX STORE에 반영한다.\n\n    await dispatch(\n      createTodoList({ order: maxOrder + 1, content: word, date, id: PK }),\n    );\n    setMaxOrder(maxOrder + 1);\n    handleToggleTextarea();\n\n    const el = document.getElementsByClassName(\"day-todo-container-ul\")[0];\n    el.scrollTo(0, el.scrollHeight);\n  };\n\n  const handleUpdateText = (e) => {\n    setWord(e.target.value);\n  };\n\n  const handleMaxOrder = (number) => {\n    setMaxOrder(number);\n  };\n\n  return (\n    <section id=\"day-container\">\n      <header id=\"day-main\">\n        <span id=\"day-title\">\n          {js_date.getMonth(time)}. {js_date.getDay(time)}.{\" \"}\n          {js_date.getLabel(time).toLowerCase()}\n        </span>\n      </header>\n      <section id=\"day-todo-container\">\n        <div id=\"day-button-container\">\n          {isTextareaActive ? (\n            <>\n              <textarea\n                className=\"day-textarea\"\n                maxLength=\"100\"\n                onChange={handleUpdateText}\n              ></textarea>\n              <button\n                className=\"day-btn-confirm-cancel\"\n                onClick={handleAddTodo}\n              >\n                확인\n              </button>\n              <button\n                className=\"day-btn-confirm-cancel\"\n                onClick={handleToggleTextarea}\n              >\n                취소\n              </button>\n            </>\n          ) : (\n            <button className=\"day-btn-add-todo\" onClick={handleToggleTextarea}>\n              새로운 TODO 작성하기\n            </button>\n          )}\n        </div>\n        <DayTodoItemList pos={time} handleMaxOrder={handleMaxOrder} />\n      </section>\n    </section>\n  );\n}\n\nexport default DayPage;\n"]},"metadata":{},"sourceType":"module"}