{"ast":null,"code":"var _jsxFileName = \"/home/studio/Desktop/Team_Project/BuildUp-client/src/components/carousels/WeekTodoSubContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../css/temporary-CSS-for-Carousel.css\";\nimport { js_date } from \"../../utilities/index.js\";\nimport { toggleModal, setModalType, setDateSelector } from \"../../actions/index\";\nimport \"../css/temporary-CSS-weekTodoContainer.css\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeekTodoSubContainer(props) {\n  _s();\n\n  // TODO 아래 변수를 조정하여 화면에 노출되는 최대 TODO 갯수를 조정할 수 있습니다.\n  const MAX_ELEMENTS_COUNT = 8;\n  const dispatch = useDispatch();\n  const [lists, setLists] = useState([]);\n  const todoItemsState = useSelector(state => state.toDoItemsReducer);\n  const todoItems = todoItemsState.todoItems;\n  const modalState = useSelector(state => state.modalStateReducer);\n  const modalTypeState = useSelector(state => state.modalTypeReducer);\n  const dateSelectorState = useSelector(state => state.dateSelectorReducer);\n  const {\n    year,\n    month,\n    day\n  } = dateSelectorState;\n  const isModalOpen = modalState.modalStatus;\n  const {\n    modalType\n  } = modalTypeState;\n  useEffect(() => {\n    const [year, month, day] = [format(props.pos, \"yyyy\"), format(props.pos, \"MM\"), format(props.pos, \"dd\")];\n    const curPos = `${year}-${month}-${day}`;\n    const count = {};\n    const tempStore = Object.assign([], todoItems);\n    tempStore.sort((a, b) => a.order - b.order);\n    const sorted = tempStore.filter(el => {\n      if (el.date === curPos) {\n        if (count[el.date] >= MAX_ELEMENTS_COUNT) return false;\n        if (!count[el.date]) count[el.date] = 1;else count[el.date]++;\n        return true;\n      }\n\n      return false;\n    });\n    setLists(sorted);\n  }, [props.pos, todoItems]);\n\n  const handleModalTodoManager = () => {\n    if (!isModalOpen) dispatch(toggleModal());\n    if (modalType !== \"TODOMANAGER\") dispatch(setModalType(\"TODOMANAGER\"));\n    let [newYear, newMonth, newDay] = [format(props.pos, \"yyyy\"), format(props.pos, \"MM\"), format(props.pos, \"dd\")];\n    if (newYear === year && newMonth === month && newDay === day) return;\n    dispatch(setDateSelector(newYear, newMonth, newDay));\n  };\n\n  const isSelectedDay = time => {\n    let date = dateSelectorState.dateSelector;\n    let curYear = date.year;\n    let curMonth = date.month;\n    let curDay = date.day;\n    const dataFormat = \"yyyy-MM-dd\";\n    date = format(time, dataFormat);\n    date = date.split(\"-\");\n    const [year, month, day] = date;\n    if (Number(curYear) === Number(year) && Number(curMonth) === Number(month) && Number(curDay) === Number(day)) return true;\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: [\"week-todo-subcontainer\", isSelectedDay(props.pos) ? \"selected\" : \"\"].join(\" \"),\n    onClick: handleModalTodoManager,\n    children: lists.map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-todo-subcontainer-item\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-order\": `${el.order}`,\n          className: el.checked ? \"checked\" : \"\",\n          children: el.content\n        }, `${el.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this);\n    })\n  }, \"idx\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeekTodoSubContainer, \"/46FtSFcw7nD7UZt/v4Dv5ssnhA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = WeekTodoSubContainer;\nexport default WeekTodoSubContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekTodoSubContainer\");","map":{"version":3,"sources":["/home/studio/Desktop/Team_Project/BuildUp-client/src/components/carousels/WeekTodoSubContainer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","js_date","toggleModal","setModalType","setDateSelector","format","WeekTodoSubContainer","props","MAX_ELEMENTS_COUNT","dispatch","lists","setLists","todoItemsState","state","toDoItemsReducer","todoItems","modalState","modalStateReducer","modalTypeState","modalTypeReducer","dateSelectorState","dateSelectorReducer","year","month","day","isModalOpen","modalStatus","modalType","pos","curPos","count","tempStore","Object","assign","sort","a","b","order","sorted","filter","el","date","handleModalTodoManager","newYear","newMonth","newDay","isSelectedDay","time","dateSelector","curYear","curMonth","curDay","dataFormat","split","Number","join","map","idx","checked","content","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../css/temporary-CSS-for-Carousel.css\";\nimport { js_date } from \"../../utilities/index.js\";\nimport {\n  toggleModal,\n  setModalType,\n  setDateSelector,\n} from \"../../actions/index\";\nimport \"../css/temporary-CSS-weekTodoContainer.css\";\nimport { format } from \"date-fns\";\n\nfunction WeekTodoSubContainer(props) {\n  // TODO 아래 변수를 조정하여 화면에 노출되는 최대 TODO 갯수를 조정할 수 있습니다.\n  const MAX_ELEMENTS_COUNT = 8;\n\n  const dispatch = useDispatch();\n  const [lists, setLists] = useState([]);\n\n  const todoItemsState = useSelector((state) => state.toDoItemsReducer);\n  const todoItems = todoItemsState.todoItems;\n\n  const modalState = useSelector((state) => state.modalStateReducer);\n  const modalTypeState = useSelector((state) => state.modalTypeReducer);\n  const dateSelectorState = useSelector((state) => state.dateSelectorReducer);\n  const { year, month, day } = dateSelectorState;\n  const isModalOpen = modalState.modalStatus;\n  const { modalType } = modalTypeState;\n\n  useEffect(() => {\n    const [year, month, day] = [\n      format(props.pos, \"yyyy\"),\n      format(props.pos, \"MM\"),\n      format(props.pos, \"dd\"),\n    ];\n    const curPos = `${year}-${month}-${day}`;\n\n    const count = {};\n\n    const tempStore = Object.assign([], todoItems);\n    tempStore.sort((a, b) => a.order - b.order);\n\n    const sorted = tempStore.filter((el) => {\n      if (el.date === curPos) {\n        if (count[el.date] >= MAX_ELEMENTS_COUNT) return false;\n        if (!count[el.date]) count[el.date] = 1;\n        else count[el.date]++;\n        return true;\n      }\n      return false;\n    });\n\n    setLists(sorted);\n  }, [props.pos, todoItems]);\n\n  const handleModalTodoManager = () => {\n    if (!isModalOpen) dispatch(toggleModal());\n    if (modalType !== \"TODOMANAGER\") dispatch(setModalType(\"TODOMANAGER\"));\n\n    let [newYear, newMonth, newDay] = [\n      format(props.pos, \"yyyy\"),\n      format(props.pos, \"MM\"),\n      format(props.pos, \"dd\"),\n    ];\n\n    if (newYear === year && newMonth === month && newDay === day) return;\n    dispatch(setDateSelector(newYear, newMonth, newDay));\n  };\n\n  const isSelectedDay = (time) => {\n    let date = dateSelectorState.dateSelector;\n    let curYear = date.year;\n    let curMonth = date.month;\n    let curDay = date.day;\n\n    const dataFormat = \"yyyy-MM-dd\";\n    date = format(time, dataFormat);\n    date = date.split(\"-\");\n    const [year, month, day] = date;\n\n    if (\n      Number(curYear) === Number(year) &&\n      Number(curMonth) === Number(month) &&\n      Number(curDay) === Number(day)\n    )\n      return true;\n    return false;\n  };\n\n  return (\n    <div\n      className={[\n        \"week-todo-subcontainer\",\n        isSelectedDay(props.pos) ? \"selected\" : \"\",\n      ].join(\" \")}\n      key=\"idx\"\n      onClick={handleModalTodoManager}\n    >\n      {lists.map((el, idx) => {\n        return (\n          <div key={idx} className=\"week-todo-subcontainer-item\">\n            <li\n              key={`${el.id}`}\n              data-order={`${el.order}`}\n              className={el.checked ? \"checked\" : \"\"}\n            >\n              {el.content}\n            </li>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default WeekTodoSubContainer;\n"]},"metadata":{},"sourceType":"module"}