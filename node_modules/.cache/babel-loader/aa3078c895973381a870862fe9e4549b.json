{"ast":null,"code":"var _jsxFileName = \"/home/studio/Desktop/Team_Project/BuildUp-client/src/components/Time.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../css/MainPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BuildUpTime() {\n  _s();\n\n  const locale = \"ko\";\n  const [today, setDate] = useState(new Date()); // Save the current date to be able to trigger an update\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      //1 분마다 현재 데이터를 업데이트한다.\n      setDate(new Date());\n    }, 60 * 1000 / 1000);\n    return () => {\n      clearInterval(timer); // 마운트 해제시 호출되지 않도록 타이머를 지우는 기능\n    };\n  }, []);\n  const day = today.toLocaleDateString(locale, {\n    weekday: \"long\"\n  });\n  const date = `${today.toLocaleDateString(locale, {\n    month: \"long\"\n  })} ${today.getDate()}일 ${day}`;\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n  const time = today.toLocaleTimeString({\n    hour12: true,\n    hour: \"numeric\",\n    minute: \"numeric\"\n  });\n  const wish = `To day Message ${time <= 12 && \"대충 오전 아무말\" || time <= 17 && \"대충 오후 아무말\" || time <= 20 && \"대충 저녁 아무말\" || \"대충 빨리 자라\"}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"time-zone\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"time-message\",\n        children: wish\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"time-clock\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"time-date\",\n          children: [\" \", date, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} // let time = new Date().toLocaleTimeString();\n// const [ntime, setNTime] = useState(time);\n// const startTime = () => {\n//   time = new Date().toLocaleTimeString();\n//   setNTime(time);\n// };\n// setInterval(startTime, 1000);\n// return <span className=\"time\">{ntime}</span>;\n\n_s(BuildUpTime, \"9i+dpEfAuUB6527zD7xQc9beSEk=\");\n\n_c = BuildUpTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuildUpTime\");","map":{"version":3,"sources":["/home/studio/Desktop/Team_Project/BuildUp-client/src/components/Time.js"],"names":["React","useEffect","useRef","useState","BuildUpTime","locale","today","setDate","Date","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","date","month","getDate","hour","getHours","min","getMinutes","sec","getSeconds","time","toLocaleTimeString","hour12","minute","wish"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAO,qBAAP;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,MAAM,GAAG,IAAf;AACA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CAAjC,CAFoC,CAEW;;AAE/CR,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpB,UAAMQ,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9B;AACAH,MAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACD,KAHwB,EAGrB,KAAK,IAAN,GAAc,IAHQ,CAAzB;AAKA,WAAO,MAAM;AACXG,MAAAA,aAAa,CAACF,KAAD,CAAb,CADW,CACW;AACvB,KAFD;AAGD,GATD,EASG,EATH;AAWA,QAAMG,GAAG,GAAGN,KAAK,CAACO,kBAAN,CAAyBR,MAAzB,EAAiC;AAAES,IAAAA,OAAO,EAAE;AAAX,GAAjC,CAAZ;AACA,QAAMC,IAAI,GAAI,GAAET,KAAK,CAACO,kBAAN,CAAyBR,MAAzB,EAAiC;AAC/CW,IAAAA,KAAK,EAAE;AADwC,GAAjC,CAEb,IAAGV,KAAK,CAACW,OAAN,EAAgB,KAAIL,GAAI,EAF9B;AAIA,QAAMM,IAAI,GAAGZ,KAAK,CAACa,QAAN,EAAb;AACA,QAAMC,GAAG,GAAGd,KAAK,CAACe,UAAN,EAAZ;AACA,QAAMC,GAAG,GAAGhB,KAAK,CAACiB,UAAN,EAAZ;AAEA,QAAMC,IAAI,GAAGlB,KAAK,CAACmB,kBAAN,CAAyB;AACpCC,IAAAA,MAAM,EAAE,IAD4B;AAEpCR,IAAAA,IAAI,EAAE,SAF8B;AAGpCS,IAAAA,MAAM,EAAE;AAH4B,GAAzB,CAAb;AAKA,QAAMC,IAAI,GAAI,kBACXJ,IAAI,IAAI,EAAR,IAAc,WAAf,IACCA,IAAI,IAAI,EAAR,IAAc,WADf,IAECA,IAAI,IAAI,EAAR,IAAc,WAFf,IAGA,UACD,EALD;AAMA,sBACE;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA,kBAAmCI;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAS,UAAA,SAAS,EAAC,YAAnB;AAAA,oBAAiCJ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAS,UAAA,SAAS,EAAC,WAAnB;AAAA,0BAAiCT,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CACD;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;;GA1DwBX,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"../css/MainPage.css\";\n\nexport default function BuildUpTime() {\n  const locale = \"ko\";\n  const [today, setDate] = useState(new Date()); // Save the current date to be able to trigger an update\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      //1 분마다 현재 데이터를 업데이트한다.\n      setDate(new Date());\n    }, (60 * 1000) / 1000);\n\n    return () => {\n      clearInterval(timer); // 마운트 해제시 호출되지 않도록 타이머를 지우는 기능\n    };\n  }, []);\n\n  const day = today.toLocaleDateString(locale, { weekday: \"long\" });\n  const date = `${today.toLocaleDateString(locale, {\n    month: \"long\",\n  })} ${today.getDate()}일 ${day}`;\n\n  const hour = today.getHours();\n  const min = today.getMinutes();\n  const sec = today.getSeconds();\n\n  const time = today.toLocaleTimeString({\n    hour12: true,\n    hour: \"numeric\",\n    minute: \"numeric\",\n  });\n  const wish = `To day Message ${\n    (time <= 12 && \"대충 오전 아무말\") ||\n    (time <= 17 && \"대충 오후 아무말\") ||\n    (time <= 20 && \"대충 저녁 아무말\") ||\n    \"대충 빨리 자라\"\n  }`;\n  return (\n    <div>\n      <section className=\"time-zone\">\n        <article className=\"time-message\">{wish}</article>\n        <div className=\"time-box\">\n          <article className=\"time-clock\">{time}</article>\n\n          <article className=\"time-date\"> {date} </article>\n        </div>\n      </section>\n    </div>\n  );\n}\n// let time = new Date().toLocaleTimeString();\n\n// const [ntime, setNTime] = useState(time);\n\n// const startTime = () => {\n//   time = new Date().toLocaleTimeString();\n//   setNTime(time);\n// };\n\n// setInterval(startTime, 1000);\n// return <span className=\"time\">{ntime}</span>;\n"]},"metadata":{},"sourceType":"module"}