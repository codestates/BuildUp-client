{"ast":null,"code":"var _jsxFileName = \"/home/studio/Desktop/Team_Project/BuildUp-client/src/components/modals/TodoManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setDateSelector } from \"../../actions/index\";\nimport { js_date, jwt_isExpired, fetch_custom } from \"../../utilities/index.js\";\nimport TodoManagerListContainer from \"./TodoManagerListContainer\";\nimport { createTodoList, setAccessToken } from \"../../actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoManager(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const accessTokenState = useSelector(state => state.accessTokenReducer);\n  const accessToken = accessTokenState.accessToken;\n  const dateSelectorState = useSelector(state => state.dateSelectorReducer);\n  const {\n    dateSelector\n  } = dateSelectorState;\n  const [isTextareaActive, setTextarea] = useState(\"false\");\n  const [word, setWord] = useState(\"\");\n  const [maxOrder, setMaxorder] = useState(0);\n  const [alert, setAlert] = useState(\"\");\n  useEffect(() => {\n    const el = document.getElementById(\"todo-manager-container\");\n    el.scrollTo(0, 0);\n  }, [dateSelector]);\n\n  const handleDateChangerLeft = () => {\n    const {\n      year,\n      month,\n      day\n    } = dateSelector;\n    let [newYear, newMonth, newDay] = [year, month, day];\n    let monthMinus = -1;\n\n    if (day - 1 <= 0) {\n      monthMinus = 0;\n\n      if (month === 0) {\n        newMonth = 11;\n        newYear = newYear - 1;\n      } else newMonth = newMonth - 1;\n    }\n\n    newDay = newDay - 1;\n    const result = new Date(newYear, newMonth + monthMinus, newDay);\n    dispatch(setDateSelector(js_date.getYear(result), js_date.getMonth(result, \"number\"), js_date.getDay(result)));\n  };\n\n  const handleDateChangerRight = () => {\n    const {\n      year,\n      month,\n      day\n    } = dateSelector;\n    const result = new Date(year, month - 1, Number(day) + 1);\n    dispatch(setDateSelector(js_date.getYear(result), js_date.getMonth(result), js_date.getDay(result)));\n  };\n\n  const handleCancelTodo = () => {\n    toggleTextarea();\n    setAlert(\"\");\n  };\n\n  const handleAddTodo = async () => {\n    if (word.length === 0) {\n      setAlert(\"최소 1자 이상 입력해야 합니다.\");\n      return;\n    }\n\n    let {\n      year,\n      month,\n      day\n    } = dateSelector;\n    year = year.toString().padStart(4, \"0\");\n    month = month.toString().padStart(2, \"0\");\n    day = day.toString().padStart(2, \"0\");\n    const date = `${year}-${month}-${day}`; // TODO: 1. 토큰이 만료되었는지 확인한다\n    // TODO: 2. 토큰이 만료되었으면 새로운 토큰을 요청한다.\n    // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n    // TODO 3. 새로 생성할 TODO를 서버에 전송하여 Primary Key를 받는다.\n\n    const data = {\n      order: maxOrder + 1,\n      content: word,\n      now: date\n    };\n    const PK = await fetch_custom.createTodo(accessToken, data); // TODO 4. 클라이언트 측에도 업데이트 사항을 REDUX STORE에 반영한다.\n\n    await dispatch(createTodoList({\n      order: maxOrder + 1,\n      content: word,\n      date,\n      id: PK\n    }));\n    setMaxorder(maxOrder + 1);\n    setAlert(\"\");\n    toggleTextarea();\n    const el = document.getElementById(\"todo-manager-container\");\n    el.scrollTo(0, el.scrollHeight);\n  };\n\n  const handleMaxOrder = number => {\n    setMaxorder(number);\n  };\n\n  const handleSetAlert = text => {\n    setAlert(text);\n  };\n\n  const toggleTextarea = () => {\n    setTextarea(!isTextareaActive);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modal-header-daySelector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDateChangerLeft,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [dateSelector.month, \"\\uC6D4 \", dateSelector.day, \"\\uC77C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDateChangerRight,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-section\",\n      children: /*#__PURE__*/_jsxDEV(TodoManagerListContainer, {\n        handleMaxOrder: handleMaxOrder,\n        handleSetAlert: handleSetAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"alert\",\n        children: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), !isTextareaActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          maxLength: \"100\",\n          onChange: e => {\n            setWord(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddTodo,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelTodo,\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTextarea,\n          children: \"\\uC0C8\\uB85C\\uC6B4 TODO \\uC791\\uC131\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoManager, \"3afIv9LTwXq1L32ce5JjVHOBOD4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TodoManager;\nexport default TodoManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoManager\");","map":{"version":3,"sources":["/home/studio/Desktop/Team_Project/BuildUp-client/src/components/modals/TodoManager.js"],"names":["React","useEffect","useState","useDispatch","useSelector","setDateSelector","js_date","jwt_isExpired","fetch_custom","TodoManagerListContainer","createTodoList","setAccessToken","TodoManager","props","dispatch","accessTokenState","state","accessTokenReducer","accessToken","dateSelectorState","dateSelectorReducer","dateSelector","isTextareaActive","setTextarea","word","setWord","maxOrder","setMaxorder","alert","setAlert","el","document","getElementById","scrollTo","handleDateChangerLeft","year","month","day","newYear","newMonth","newDay","monthMinus","result","Date","getYear","getMonth","getDay","handleDateChangerRight","Number","handleCancelTodo","toggleTextarea","handleAddTodo","length","toString","padStart","date","data","order","content","now","PK","createTodo","id","scrollHeight","handleMaxOrder","number","handleSetAlert","text","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setDateSelector } from \"../../actions/index\";\nimport { js_date, jwt_isExpired, fetch_custom } from \"../../utilities/index.js\";\nimport TodoManagerListContainer from \"./TodoManagerListContainer\";\nimport { createTodoList, setAccessToken } from \"../../actions/index\";\n\nfunction TodoManager(props) {\n  const dispatch = useDispatch();\n  const accessTokenState = useSelector((state) => state.accessTokenReducer);\n  const accessToken = accessTokenState.accessToken;\n  const dateSelectorState = useSelector((state) => state.dateSelectorReducer);\n  const { dateSelector } = dateSelectorState;\n\n  const [isTextareaActive, setTextarea] = useState(\"false\");\n  const [word, setWord] = useState(\"\");\n  const [maxOrder, setMaxorder] = useState(0);\n  const [alert, setAlert] = useState(\"\");\n\n  useEffect(() => {\n    const el = document.getElementById(\"todo-manager-container\");\n    el.scrollTo(0, 0);\n  }, [dateSelector]);\n\n  const handleDateChangerLeft = () => {\n    const { year, month, day } = dateSelector;\n    let [newYear, newMonth, newDay] = [year, month, day];\n\n    let monthMinus = -1;\n    if (day - 1 <= 0) {\n      monthMinus = 0;\n      if (month === 0) {\n        newMonth = 11;\n        newYear = newYear - 1;\n      } else newMonth = newMonth - 1;\n    }\n    newDay = newDay - 1;\n\n    const result = new Date(newYear, newMonth + monthMinus, newDay);\n\n    dispatch(\n      setDateSelector(\n        js_date.getYear(result),\n        js_date.getMonth(result, \"number\"),\n        js_date.getDay(result),\n      ),\n    );\n  };\n  const handleDateChangerRight = () => {\n    const { year, month, day } = dateSelector;\n    const result = new Date(year, month - 1, Number(day) + 1);\n\n    dispatch(\n      setDateSelector(\n        js_date.getYear(result),\n        js_date.getMonth(result),\n        js_date.getDay(result),\n      ),\n    );\n  };\n\n  const handleCancelTodo = () => {\n    toggleTextarea();\n    setAlert(\"\");\n  };\n  const handleAddTodo = async () => {\n    if (word.length === 0) {\n      setAlert(\"최소 1자 이상 입력해야 합니다.\");\n      return;\n    }\n    let { year, month, day } = dateSelector;\n    year = year.toString().padStart(4, \"0\");\n    month = month.toString().padStart(2, \"0\");\n    day = day.toString().padStart(2, \"0\");\n    const date = `${year}-${month}-${day}`;\n\n    // TODO: 1. 토큰이 만료되었는지 확인한다\n    // TODO: 2. 토큰이 만료되었으면 새로운 토큰을 요청한다.\n    // if (jwt_isExpired(accessToken)) {\n    //   let token = await fetch_custom.getAccessToken(accessToken);\n    //   await dispatch(setAccessToken(token));\n    // }\n\n    // TODO 3. 새로 생성할 TODO를 서버에 전송하여 Primary Key를 받는다.\n    const data = { order: maxOrder + 1, content: word, now: date };\n    const PK = await fetch_custom.createTodo(accessToken, data);\n    // TODO 4. 클라이언트 측에도 업데이트 사항을 REDUX STORE에 반영한다.\n\n    await dispatch(\n      createTodoList({ order: maxOrder + 1, content: word, date, id: PK }),\n    );\n\n    setMaxorder(maxOrder + 1);\n    setAlert(\"\");\n    toggleTextarea();\n\n    const el = document.getElementById(\"todo-manager-container\");\n    el.scrollTo(0, el.scrollHeight);\n  };\n\n  const handleMaxOrder = (number) => {\n    setMaxorder(number);\n  };\n\n  const handleSetAlert = (text) => {\n    setAlert(text);\n  };\n  const toggleTextarea = () => {\n    setTextarea(!isTextareaActive);\n  };\n  return (\n    <>\n      <div id=\"modal-header\">\n        <div id=\"modal-header-daySelector\">\n          <button onClick={handleDateChangerLeft}>&#60;</button>\n          <span>\n            {dateSelector.month}월 {dateSelector.day}일\n          </span>\n          <button onClick={handleDateChangerRight}>&#62;</button>\n        </div>\n      </div>\n      <div id=\"modal-section\">\n        <TodoManagerListContainer\n          handleMaxOrder={handleMaxOrder}\n          handleSetAlert={handleSetAlert}\n        />\n      </div>\n      {/* Footer */}\n      <div id=\"modal-footer\">\n        <div id=\"alert\">{alert}</div>\n        {!isTextareaActive ? (\n          <>\n            <textarea\n              maxLength=\"100\"\n              onChange={(e) => {\n                setWord(e.target.value);\n              }}\n            ></textarea>\n            <div>\n              <button onClick={handleAddTodo}>확인</button>\n              <button onClick={handleCancelTodo}>취소</button>\n            </div>\n          </>\n        ) : (\n          <>\n            <button onClick={toggleTextarea}>새로운 TODO 작성하기</button>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default TodoManager;\n"]},"metadata":{},"sourceType":"module"}