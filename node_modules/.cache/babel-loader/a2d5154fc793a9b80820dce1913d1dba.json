{"ast":null,"code":"var _jsxFileName = \"/home/studio/Desktop/Team_Project/BuildUp-client/src/components/carousels/WeekTodoSubContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../css/temporary-CSS-for-Carousel.css\";\nimport { js_date } from \"../../utilities/index.js\";\nimport { toggleModal, setModalType, setDateSelector } from \"../../actions/index\";\nimport \"../css/temporary-CSS-weekTodoContainer.css\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeekTodoSubContainer(props) {\n  _s();\n\n  // TODO 아래 변수를 조정하여 화면에 노출되는 최대 TODO 갯수를 조정할 수 있습니다.\n  const MAX_ELEMENTS_COUNT = 8;\n  const dispatch = useDispatch();\n  const [time, setTime] = useState(props.pos);\n  const [lists, setLists] = useState([]);\n  const todoItemsState = useSelector(state => state.toDoItemsReducer);\n  const todoItems = todoItemsState.todoItems;\n  const modalState = useSelector(state => state.modalStateReducer);\n  const modalTypeState = useSelector(state => state.modalTypeReducer);\n  const dateSelectorState = useSelector(state => state.dateSelectorReducer);\n  const isModalOpen = modalState.modalStatus;\n  const {\n    modalType\n  } = modalTypeState;\n  const {\n    year,\n    month,\n    day\n  } = dateSelectorState;\n  useEffect(() => {\n    const [year, month, day] = [js_date.getYear(time), js_date.getMonth(time), js_date.getDay(time)];\n    const curPos = `${year}-${month}-${day}`;\n    const count = {};\n    const tempStore = Object.assign([], todoItems);\n    tempStore.sort((a, b) => a.order - b.order);\n    const sorted = tempStore.filter(el => {\n      if (el.date === curPos) {\n        if (count[el.date] >= MAX_ELEMENTS_COUNT) return false;\n        if (!count[el.date]) count[el.date] = 1;else count[el.date]++;\n        return true;\n      }\n\n      return false;\n    });\n    setLists(sorted);\n  }, [time, todoItems]);\n\n  const handleModalTodoManager = () => {\n    if (!isModalOpen) dispatch(toggleModal());\n    if (modalType !== \"TODOMANAGER\") dispatch(setModalType(\"TODOMANAGER\"));\n    let [newYear, newMonth, newDay] = [js_date.getYear(time), js_date.getMonth(time), js_date.getDay(time)];\n    if (newYear === year && newMonth === month && newDay === day) return;\n    dispatch(setDateSelector(newYear, newMonth, newDay));\n  };\n\n  const isSelectedDay = time => {\n    let date = dateSelectorState.dateSelector;\n    let curYear = date.year;\n    let curMonth = date.month;\n    let curDay = date.day;\n    const dataFormat = \"yyyy-MM-dd\";\n    date = format(time, dataFormat);\n    date = date.split(\"-\");\n    const [year, month, day] = date;\n    if (curYear === Number(year) && curMonth === Number(month) && curDay === Number(day)) return true;\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: [\"week-todo-subcontainer\", isSelectedDay(time) ? \"selected\" : \"\"].join(\" \"),\n    onClick: handleModalTodoManager,\n    children: lists.map((el, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-todo-subcontainer-item\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-order\": `${el.order}`,\n          className: el.checked ? \"checked\" : \"\",\n          children: el.content\n        }, `${el.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this);\n    })\n  }, \"idx\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WeekTodoSubContainer, \"4AOqCINBku722duHY8HpfRLqews=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = WeekTodoSubContainer;\nexport default WeekTodoSubContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeekTodoSubContainer\");","map":{"version":3,"sources":["/home/studio/Desktop/Team_Project/BuildUp-client/src/components/carousels/WeekTodoSubContainer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","js_date","toggleModal","setModalType","setDateSelector","format","WeekTodoSubContainer","props","MAX_ELEMENTS_COUNT","dispatch","time","setTime","pos","lists","setLists","todoItemsState","state","toDoItemsReducer","todoItems","modalState","modalStateReducer","modalTypeState","modalTypeReducer","dateSelectorState","dateSelectorReducer","isModalOpen","modalStatus","modalType","year","month","day","getYear","getMonth","getDay","curPos","count","tempStore","Object","assign","sort","a","b","order","sorted","filter","el","date","handleModalTodoManager","newYear","newMonth","newDay","isSelectedDay","dateSelector","curYear","curMonth","curDay","dataFormat","split","Number","join","map","idx","checked","content","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../css/temporary-CSS-for-Carousel.css\";\nimport { js_date } from \"../../utilities/index.js\";\nimport {\n  toggleModal,\n  setModalType,\n  setDateSelector,\n} from \"../../actions/index\";\nimport \"../css/temporary-CSS-weekTodoContainer.css\";\nimport { format } from \"date-fns\";\n\nfunction WeekTodoSubContainer(props) {\n  // TODO 아래 변수를 조정하여 화면에 노출되는 최대 TODO 갯수를 조정할 수 있습니다.\n  const MAX_ELEMENTS_COUNT = 8;\n\n  const dispatch = useDispatch();\n  const [time, setTime] = useState(props.pos);\n  const [lists, setLists] = useState([]);\n\n  const todoItemsState = useSelector((state) => state.toDoItemsReducer);\n  const todoItems = todoItemsState.todoItems;\n\n  const modalState = useSelector((state) => state.modalStateReducer);\n  const modalTypeState = useSelector((state) => state.modalTypeReducer);\n  const dateSelectorState = useSelector((state) => state.dateSelectorReducer);\n  const isModalOpen = modalState.modalStatus;\n  const { modalType } = modalTypeState;\n  const { year, month, day } = dateSelectorState;\n\n  useEffect(() => {\n    const [year, month, day] = [\n      js_date.getYear(time),\n      js_date.getMonth(time),\n      js_date.getDay(time),\n    ];\n    const curPos = `${year}-${month}-${day}`;\n\n    const count = {};\n\n    const tempStore = Object.assign([], todoItems);\n    tempStore.sort((a, b) => a.order - b.order);\n\n    const sorted = tempStore.filter((el) => {\n      if (el.date === curPos) {\n        if (count[el.date] >= MAX_ELEMENTS_COUNT) return false;\n        if (!count[el.date]) count[el.date] = 1;\n        else count[el.date]++;\n        return true;\n      }\n      return false;\n    });\n    setLists(sorted);\n  }, [time, todoItems]);\n\n  const handleModalTodoManager = () => {\n    if (!isModalOpen) dispatch(toggleModal());\n    if (modalType !== \"TODOMANAGER\") dispatch(setModalType(\"TODOMANAGER\"));\n\n    let [newYear, newMonth, newDay] = [\n      js_date.getYear(time),\n      js_date.getMonth(time),\n      js_date.getDay(time),\n    ];\n\n    if (newYear === year && newMonth === month && newDay === day) return;\n    dispatch(setDateSelector(newYear, newMonth, newDay));\n  };\n\n  const isSelectedDay = (time) => {\n    let date = dateSelectorState.dateSelector;\n    let curYear = date.year;\n    let curMonth = date.month;\n    let curDay = date.day;\n\n    const dataFormat = \"yyyy-MM-dd\";\n    date = format(time, dataFormat);\n    date = date.split(\"-\");\n    const [year, month, day] = date;\n\n    if (\n      curYear === Number(year) &&\n      curMonth === Number(month) &&\n      curDay === Number(day)\n    )\n      return true;\n    return false;\n  };\n\n  return (\n    <div\n      className={[\n        \"week-todo-subcontainer\",\n        isSelectedDay(time) ? \"selected\" : \"\",\n      ].join(\" \")}\n      key=\"idx\"\n      onClick={handleModalTodoManager}\n    >\n      {lists.map((el, idx) => {\n        return (\n          <div key={idx} className=\"week-todo-subcontainer-item\">\n            <li\n              key={`${el.id}`}\n              data-order={`${el.order}`}\n              className={el.checked ? \"checked\" : \"\"}\n            >\n              {el.content}\n            </li>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default WeekTodoSubContainer;\n"]},"metadata":{},"sourceType":"module"}