{"ast":null,"code":"var _jsxFileName = \"/home/studio/Desktop/Team_Project/BuildUp-client/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleModal, setModalType } from \"../actions/index\";\nimport Login from \"./modals/Login\";\nimport SignUp from \"./modals/SignUp\";\nimport TodoManager from \"./modals/TodoManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal() {\n  _s();\n\n  const dispatch = useDispatch();\n  const modalState = useSelector(state => state.modalStateReducer);\n  const modalTypeState = useSelector(state => state.modalTypeReducer);\n  const isModalOpen = modalState.modalStatus;\n  const {\n    modalType\n  } = modalTypeState;\n  const loginState = useSelector(state => state.loginStatusReducer);\n  const isLogin = loginState.loginStatus; // useEffect(() => {\n  //   const handleEventClose = (e) => {\n  //     if (e.keyCode === 27 && isModalOpen) {\n  //       dispatch(toggleModal());\n  //     }\n  //   };\n  //   window.addEventListener(\"keydown\", handleEventClose);\n  // }, [isModalOpen, dispatch]);\n\n  const handleModalToggle = () => {\n    dispatch(toggleModal());\n  };\n\n  const handleModalType = type => {\n    dispatch(setModalType(type));\n  }; // TODO Modal Type에 따라 Body를 변경합니다.\n\n\n  let modalBody = \"\";\n  if (modalType === \"LOGIN\") modalBody = /*#__PURE__*/_jsxDEV(Login, {\n    handleModalToggle: handleModalToggle,\n    handleModalType: () => {\n      handleModalType(\"SIGNUP\");\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);else if (modalType === \"SIGNUP\") modalBody = /*#__PURE__*/_jsxDEV(SignUp, {\n    handleModalToggle: handleModalToggle,\n    handleModalType: () => {\n      handleModalType(\"LOGIN\");\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);else if (modalType === \"TODOMANAGER\") modalBody = /*#__PURE__*/_jsxDEV(TodoManager, {\n    handleModalToggle: handleModalToggle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }, this);\n  const className = isModalOpen ? \"active\" : \"deactive\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"modal-container\",\n    className: [className],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-container-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-btn\",\n        onClick: handleModalToggle,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: modalBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Modal, \"/coEA5BrPh7B4fm566lrZluBY9E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/studio/Desktop/Team_Project/BuildUp-client/src/components/Modal.js"],"names":["useDispatch","useSelector","toggleModal","setModalType","Login","SignUp","TodoManager","Modal","dispatch","modalState","state","modalStateReducer","modalTypeState","modalTypeReducer","isModalOpen","modalStatus","modalType","loginState","loginStatusReducer","isLogin","loginStatus","handleModalToggle","handleModalType","type","modalBody","className"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,kBAA1C;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,UAAU,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,iBAAlB,CAA9B;AACA,QAAMC,cAAc,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACG,gBAAlB,CAAlC;AACA,QAAMC,WAAW,GAAGL,UAAU,CAACM,WAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,cAAtB;AACA,QAAMK,UAAU,GAAGhB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACQ,kBAAlB,CAA9B;AACA,QAAMC,OAAO,GAAGF,UAAU,CAACG,WAA3B,CAPe,CASf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC9Bb,IAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACD,GAFD;;AAIA,QAAMoB,eAAe,GAAIC,IAAD,IAAU;AAChCf,IAAAA,QAAQ,CAACL,YAAY,CAACoB,IAAD,CAAb,CAAR;AACD,GAFD,CAtBe,CA0Bf;;;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIR,SAAS,KAAK,OAAlB,EACEQ,SAAS,gBACP,QAAC,KAAD;AACE,IAAA,iBAAiB,EAAEH,iBADrB;AAEE,IAAA,eAAe,EAAE,MAAM;AACrBC,MAAAA,eAAe,CAAC,QAAD,CAAf;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,UADF,CADF,KASK,IAAIN,SAAS,KAAK,QAAlB,EACHQ,SAAS,gBACP,QAAC,MAAD;AACE,IAAA,iBAAiB,EAAEH,iBADrB;AAEE,IAAA,eAAe,EAAE,MAAM;AACrBC,MAAAA,eAAe,CAAC,OAAD,CAAf;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,UADF,CADG,KASA,IAAIN,SAAS,KAAK,aAAlB,EACHQ,SAAS,gBAAG,QAAC,WAAD;AAAa,IAAA,iBAAiB,EAAEH;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAZ;AAEF,QAAMI,SAAS,GAAGX,WAAW,GAAG,QAAH,GAAc,UAA3C;AACA,sBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAA0B,IAAA,SAAS,EAAE,CAACW,SAAD,CAArC;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,sBAAR;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEJ,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,gBAAMG;AAAN;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA5DQjB,K;UACUP,W,EACEC,W,EACIA,W,EAGJA,W;;;KANZM,K;AA8DT,eAAeA,KAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { toggleModal, setModalType } from \"../actions/index\";\nimport Login from \"./modals/Login\";\nimport SignUp from \"./modals/SignUp\";\nimport TodoManager from \"./modals/TodoManager\";\n\nfunction Modal() {\n  const dispatch = useDispatch();\n  const modalState = useSelector((state) => state.modalStateReducer);\n  const modalTypeState = useSelector((state) => state.modalTypeReducer);\n  const isModalOpen = modalState.modalStatus;\n  const { modalType } = modalTypeState;\n  const loginState = useSelector((state) => state.loginStatusReducer);\n  const isLogin = loginState.loginStatus;\n\n  // useEffect(() => {\n  //   const handleEventClose = (e) => {\n  //     if (e.keyCode === 27 && isModalOpen) {\n  //       dispatch(toggleModal());\n  //     }\n  //   };\n  //   window.addEventListener(\"keydown\", handleEventClose);\n  // }, [isModalOpen, dispatch]);\n\n  const handleModalToggle = () => {\n    dispatch(toggleModal());\n  };\n\n  const handleModalType = (type) => {\n    dispatch(setModalType(type));\n  };\n\n  // TODO Modal Type에 따라 Body를 변경합니다.\n  let modalBody = \"\";\n  if (modalType === \"LOGIN\")\n    modalBody = (\n      <Login\n        handleModalToggle={handleModalToggle}\n        handleModalType={() => {\n          handleModalType(\"SIGNUP\");\n        }}\n      />\n    );\n  else if (modalType === \"SIGNUP\")\n    modalBody = (\n      <SignUp\n        handleModalToggle={handleModalToggle}\n        handleModalType={() => {\n          handleModalType(\"LOGIN\");\n        }}\n      />\n    );\n  else if (modalType === \"TODOMANAGER\")\n    modalBody = <TodoManager handleModalToggle={handleModalToggle} />;\n\n  const className = isModalOpen ? \"active\" : \"deactive\";\n  return (\n    <div id=\"modal-container\" className={[className]}>\n      <div id=\"modal-container-line\">\n        <button className=\"modal-close-btn\" onClick={handleModalToggle}>\n          &times;\n        </button>\n      </div>\n      <div>{modalBody}</div>\n    </div>\n  );\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}